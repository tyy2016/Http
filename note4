TCP数据流通过名为IP数据报的小数据块发送。
IP数据报：IP首部+TCP首部+TCP数据
TCP识别一条连接：sport+dport+sip+dip
TCP延时点：握手延时（通常第三次ACK允许携带数据）；延迟确认（将确认放置在缓冲中等待可捎带的数据分组）；TCP慢启动（数据传输成功会提高传输速度）；Nagle算法；TIME_WAIT累积和端口耗尽（2MSL=120S）
http请求会经过代理等，两个相邻的http应用程序会为其共享的链接提供一组选项，并且这些选项不对传播到其他链接中。（connection首部）
一个嵌入了多个URL的web页面，浏览器需要串行发起请求，会增加时延
并行链接可能会提高页面的加载速度，但如果客户端带宽资源不足反而会提高时延。（浏览器限制了并行的总连接数）
持久连接：事务处理结束后仍然保持在打开状态的TCP连接（避开建联过程，避免慢启动）
将连接保持在打开状态：connection:Keep-Alive
Keep-Alive:max=5,timeout=120最多保持5个事物的连接打开状态，打开连接状态保持到2分钟以后
keep-alive在遇到哑代理时，盲目的转发connection首部，导致服务器端和代理保持长连接，客户端需要和代理保持长连接，代理却在传输完数据后关闭连接，导致浏览器被挂起，代理被认为是不能转发connection首部。
避免上述问题，浏览器发送一个proxy-connection首部给代理，哑代理会继续转发该头部给服务器，服务器识别到此头部后会在发送完资源后关闭连接。聪明的代理会在转发时将该头部替换成connection首部与服务器取得长连接。但是如果有多个代理时，问题依然存在。以及网络中有很多不可见的代理，如防火墙等。
http1.1中默认保持长连接打开状态，除非客户端或服务器端显示的发送了一个connection：close首部，才会关闭连接。
管道化连接：可在持久连接上可选的使用”管道连接“。
关闭连接：正常情况下应该先关闭输出信道，然后等待另一端也关闭其输出信道。
